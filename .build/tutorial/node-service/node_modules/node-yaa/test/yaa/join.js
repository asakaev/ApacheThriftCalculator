var yaa = require('../../bin/index.js');
var test = require('../test.js');
var cases = [];
var context = {};

module.exports = test(cases, __filename.substr(__dirname.length + 1), context);


var one = {};
var two = {};
var tree = {};



cases.push(yaa.join(yaa.assert.contextEquals(context, 'Context is correct.')));
cases.push(yaa.join(yaa.assert.contextEquals(context, 'Context is correct.'),
    yaa.assert.contextEquals(context, 'Context is correct.')));
cases.push(yaa.join(yaa.assert.contextEquals(context, 'Context is correct.'),
    yaa.assert.contextEquals(context, 'Context is correct.'),
    yaa.assert.contextEquals(context, 'Context is correct.'),
    yaa.assert.contextEquals(context, 'Context is correct.'),
    yaa.assert.contextEquals(context, 'Context is correct.')));

cases.push(yaa.join([
  yaa.assert.contextEquals(context, 'Context is correct.'),
  yaa.assert.contextEquals(context, 'Context is correct.'),
  yaa.assert.contextEquals(context, 'Context is correct.'),
  yaa.assert.contextEquals(context, 'Context is correct.'),
  yaa.assert.contextEquals(context, 'Context is correct.')
]));


cases.push(yaa.assert.outputEquals(
    yaa.join(), yaa.nothing(), 'Join correct.'));

cases.push(yaa.assert.outputEquals(
    yaa.join(yaa.nothing()), yaa.nothing(), 'Join correct.'));

cases.push(yaa.assert.outputEquals(
    yaa.join(yaa.nothing(), yaa.nothing()), yaa.nothing(), 'Join correct.'));

cases.push(yaa.assert.outputEquals(
    yaa.join(yaa.nothing(), yaa.nothing(), yaa.nothing()), yaa.nothing(), 'Join correct.'));

cases.push(yaa.assert.outputEquals(
    yaa.join(yaa.yes()), yaa.yes(), 'Join correct.'));

cases.push(yaa.assert.outputEquals(
    yaa.join([yaa.yes()]), yaa.yes(), 'Join correct.'));

cases.push(yaa.assert.outputEquals(
    yaa.join(yaa.nothing(), yaa.yes()), yaa.yes(), 'Join correct.'));

cases.push(yaa.assert.outputEquals(
    yaa.join([yaa.nothing(), yaa.yes()]), yaa.yes(), 'Join correct.'));

cases.push(yaa.assert.outputEquals(
    yaa.join(yaa.nothing(), yaa.yes(), yaa.nothing()), yaa.yes(), 'Join correct.'));

cases.push(yaa.assert.outputEquals(
    yaa.join([yaa.nothing(), yaa.yes(), yaa.nothing()]), yaa.yes(), 'Join correct.'));

cases.push(yaa.assert.outputEquals(
    yaa.join(yaa.nothing(), yaa.yes()), yaa.pair(yaa.nothing(), yaa.yes()), 'Join correct.'));

cases.push(yaa.assert.outputEquals(
    yaa.join([yaa.nothing(), yaa.yes()]), yaa.pair(yaa.nothing(), yaa.yes()), 'Join correct.'));

cases.push(yaa.assert.outputEquals(
    yaa.join(yaa.yes(), yaa.yes()), yaa.pair(yaa.yes(), yaa.yes()), 'Join correct.'));

cases.push(yaa.assert.outputEquals(
    yaa.join(yaa.insert(one)), yaa.insert(one), 'Join correct.'));

cases.push(yaa.assert.outputEquals(
    yaa.join(yaa.insert(one), yaa.insert(two)), yaa.insert(one, two), 'Join correct.'));

cases.push(yaa.assert.outputEquals(
    yaa.join(yaa.insert(one), yaa.insert(two), yaa.insert(tree)), yaa.insert(one, two, tree), 'Join correct.'));

cases.push(yaa.assert.outputEquals(
    yaa.join(yaa.insert(one), yaa.insert(two, tree)), yaa.insert(one, two, tree), 'Join correct.'));



