var thrift = require('../bin/index.js');
var Idl = require('./idl.js');
var ServerConnection = require('./tcp-server.js');
var ClientConnection = require('./connection.js');


var idl = new Idl();
var protocol = new thrift.protocol.Binary(idl);
var server = new thrift.Service(protocol, idl.actionFactory);

var serviceConnection = new ServerConnection(36372, function(chunk, connection) {
  server.dataHandler(chunk, connection);
});

var client = new thrift.Client(protocol, function(handler) {
  return new ClientConnection(36372, handler);
});

var structures = [{
  'field1': 'Value1',
  'field2': 'Value2'
}];


//var payload = (new Array(100 *  1024 * 1000)).join('$');
var str1 = {
  'field1': 123456789,
  'field2': 'IA_STRINGA',
  'field3': true
};


var payload = {
  'field1': [str1, str1, str1, str1, str1],
  'field2': {
    'qwe': 'qwe',
    'asd': 'asd',
    'zxc': 'zxc'}
};

var result  = 0;

var requestCount  = 500;
var counter  = requestCount;
var i = 0
var now = Date.now();


function resultHandler(data) {
  i++;
  result += Date.now() - now;
  if (i === requestCount) {
    console.log('time', result/requestCount);
    console.log('counts', requestCount);
 //   console.log('data', data.getPayload()[1]);
  }

}

//client.sendRequest('metod-metod', args, resultHndler, console.log);


while (counter > 0) {
  client.sendRequest('metod-metod', args, resultHandler, console.log);
  counter--;
}

