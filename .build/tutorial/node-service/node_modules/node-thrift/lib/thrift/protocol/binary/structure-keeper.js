


/**
 * @constructor
 * @implements {thrift.IValueKeeper}
 * @param {!thrift.protocol.IProtocol} protocol
 */
thrift.protocol.binary.StructureKeeper = function(protocol) {

  /**
   * @type {!thrift.protocol.IProtocol}
   */
  this.__protocol = protocol;

  /**
   * @type {!thrift.Value}
   */
  this.__result = {};

  /**
   * @type {boolean}
   */
  this.__isComplete = false;
};


/**
 * @inheritDoc
 */
thrift.protocol.binary.StructureKeeper.prototype.processHeader =
    function(cursor, chunk) {};


/**
 * @inheritDoc
 */
thrift.protocol.binary.StructureKeeper.prototype.isHeaderComplete = function() {
  return true;
};


/**
 * @inheritDoc
 */
thrift.protocol.binary.StructureKeeper.prototype.applyData = function(field) {
  if (field instanceof thrift.Field) {
    if (field.getType() !== thrift.definition.Type.STOP) {
      this.__result[field.getId()] = field.getValue();
    } else {
      this.__isComplete = true;
    }
  }
};


/**
 * @inheritDoc
 */
thrift.protocol.binary.StructureKeeper.prototype.isComplete = function() {
  return this.__isComplete;
};


/**
 * @inheritDoc
 */
thrift.protocol.binary.StructureKeeper.prototype.get = function() {
  return this.__result;
};


/**
 * @inheritDoc
 */
thrift.protocol.binary.StructureKeeper.prototype.getType = function() {
  return thrift.definition.Type.STRUCT;
};
