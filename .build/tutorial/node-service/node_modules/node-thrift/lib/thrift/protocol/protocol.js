

/**
 * @param {number} type
 * @param {!thrift.protocol.IProtocol} protocol
 * @return {!thrift.IPacketHandler}
 */
thrift.protocol.MAP_HANDLER = function(type, protocol) {
  return new thrift.IncludedHandler(protocol,
      thrift.handlerBuilder,
      new thrift.protocol.binary.MapKeeper(protocol));
};


/**
 * @param {number} type
 * @param {!thrift.protocol.IProtocol} protocol
 * @return {!thrift.IPacketHandler}
 */
thrift.protocol.ARRAY_HANDLER = function(type, protocol) {
  return new thrift.IncludedHandler(protocol,
      thrift.handlerBuilder,
      new thrift.protocol.binary.ArrayKeeper(protocol));
};


/**
 * @param {number} type
 * @param {!thrift.protocol.IProtocol} protocol
 * @return {!thrift.IPacketHandler}
 */
thrift.protocol.FIELD_HANDLER = function(type, protocol) {
  return new thrift.IncludedHandler(protocol,
      thrift.handlerBuilder,
      new thrift.protocol.binary.FieldKeeper(protocol));
};


/**
 * @param {number} type
 * @param {!thrift.protocol.IProtocol} protocol
 * @return {!thrift.IPacketHandler}
 */
thrift.protocol.STRUCTURE_HANDLER = function(type, protocol) {
  return new thrift.IncludedHandler(protocol,
      thrift.protocol.FIELD_HANDLER,
      new thrift.protocol.binary.StructureKeeper(protocol));
};


/**
 * @param {!thrift.protocol.IProtocol} protocol
 * @return {!thrift.IPacketHandler}
 */
thrift.protocol.MESSAGE_HANDLER = function(protocol) {
  if (protocol instanceof thrift.protocol.Json) {
    return new thrift.JsonHandler(protocol,
        new thrift.protocol.json.MessageKeeper(protocol));
  }

  return new thrift.IncludedHandler(protocol,
      thrift.protocol.STRUCTURE_HANDLER,
      new thrift.protocol.binary.MessageKeeper(protocol));
};

