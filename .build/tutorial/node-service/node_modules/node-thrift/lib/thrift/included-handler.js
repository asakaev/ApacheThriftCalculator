


/**
 *
 * @constructor
 * @implements {thrift.IPacketHandler}
 * @param {!thrift.protocol.IProtocol} protocol
 * @param {!thrift.HandlerBuilder} valueHandlerBuilder
 * @param {!thrift.IValueKeeper} valueKeeper
 */
thrift.IncludedHandler = function(protocol, valueHandlerBuilder,
                                  valueKeeper) {

  /**
   * @type {!thrift.protocol.IProtocol}
   */
  this.__protocol = protocol;

  /**
   * @type {thrift.IPacketHandler}
   */
  this.__valueParser = null;

  /**
   * @type {thrift.IValueKeeper}
   */
  this.__valueKeeper = valueKeeper;

  /**
   * @type {!thrift.HandlerBuilder}
   */
  this.__valueHandlerBuilder = valueHandlerBuilder;
};


/**
 * @inheritDoc
 */
thrift.IncludedHandler.prototype.process = function(cursor, chunk) {
  if (!this.__valueKeeper.isHeaderComplete()) {
    this.__valueKeeper.processHeader(cursor, chunk);
  }

  if (this.__valueKeeper.isHeaderComplete()) {
    this.__processBody(cursor, chunk);
  }

  return cursor.isParsed();
};


/**
 * @param {!thrift.Cursor} cursor
 * @param {!Buffer} chunk
 */
thrift.IncludedHandler.prototype.__processBody = function(cursor, chunk) {
  while (cursor.isParsed() && !this.__valueKeeper.isComplete()) {
    if (this.__valueParser === null) {
      this.__valueParser = this.__valueHandlerBuilder(
          this.__valueKeeper.getType(), this.__protocol);

      if (this.__valueParser === null) {
        break;
      }
    }

    if (this.__valueParser !== null) {
      if (this.__valueParser.process(cursor, chunk)) {
        this.__valueKeeper.applyData(this.__valueParser.get());
        this.__valueParser = null;
      }
    }
  }
};


/**
 * @inheritDoc
 */
thrift.IncludedHandler.prototype.get = function() {
  return this.__valueKeeper.get();
};
