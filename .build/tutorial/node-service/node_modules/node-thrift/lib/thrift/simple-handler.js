


/**
 * @constructor
 * @implements {thrift.IPacketHandler}
 * @param {number} type
 * @param {!thrift.protocol.IProtocol} protocol
 */
thrift.SimpleHandler = function(type, protocol) {

  /**
   * @type {number}
   */
  this.__type = type;

  /**
   * @type {!thrift.protocol.IProtocol}
   */
  this.__protocol = protocol;

  /**
   * @type {thrift.Value}
   */
  this.__output = null;
};


/**
 * @inheritDoc
 */
thrift.SimpleHandler.prototype.get = function() {
  return this.__output;
};


/**
 * @inheritDoc
 */
thrift.SimpleHandler.prototype.process = function(cursor, chunk) {
  if (this.__type === thrift.definition.Type.STRING) {
    this.__output = this.__protocol.readString(cursor, chunk);
  } else if (this.__type === thrift.definition.Type.BOOL) {
    this.__output = this.__protocol.readBool(cursor, chunk);
  } else if (this.__type === thrift.definition.Type.BYTE) {
    this.__output = this.__protocol.readByte(cursor, chunk);
  } else if (this.__type === thrift.definition.Type.I16) {
    this.__output = this.__protocol.readI16(cursor, chunk);
  } else if (this.__type === thrift.definition.Type.I32) {
    this.__output = this.__protocol.readI32(cursor, chunk);
  } else if (this.__type === thrift.definition.Type.I64) {
    this.__output = this.__protocol.readI64(cursor, chunk);
  } else if (this.__type === thrift.definition.Type.DOUBLE) {
    this.__output = this.__protocol.readDouble(cursor, chunk);
  }

  return cursor.isParsed();
};
