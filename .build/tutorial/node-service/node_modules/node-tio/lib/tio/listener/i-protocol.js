


/**
 * @interface
 */
tio.listener.IProtocol = function() {};


/**
 * @param {!http.IncomingMessage} request
 * @param {!function(!tio.thrift.Message)} apply
 * @param {!yaa.ErrorHandler} cancel
 */
tio.listener.IProtocol.prototype.process =
    function(request, apply, cancel) {};


/**
 * @param {!http.ServerResponse} response
 * @param {!tio.thrift.Message} message
 * @param {!Arguments} result
 */
tio.listener.IProtocol.prototype.complete =
    function(response, message, result) {};


/**
 * @param {!http.ServerResponse} response
 * @param {yaa.Error} error
 * @param {!tio.thrift.Message=} opt_message
 */
tio.listener.IProtocol.prototype.cancel =
    function(response, error, opt_message) {};
