var yaa = require('../../bin/index.js');
var test = require('../test.js');
var cases = [];

module.exports = test(cases, __filename.substr(__dirname.length + 1));

var five = [{}, {}, {}, {}, {}];
var four = [{}, {}, {}, {}];
var three = [{}, {}, {}];
var two = [{}, {}];
var one = [{}];

cases.push(yaa.assert.outputEquals(
    yaa.insert(five[0], five[1], five[2], five[3], five[4]),
    function(complete, cancel) {
      yaa.nop().call(null, complete, cancel,
          five[0], five[1], five[2], five[3], five[4])
    }, 'Five arguments nop.'));


cases.push(yaa.assert.outputEquals(
    yaa.insert(four[0], four[1], four[2], four[3]),
    function(complete, cancel) {
      yaa.nop().call(null, complete, cancel,
          four[0], four[1], four[2], four[3])
    }, 'Four arguments nop.'));


cases.push(yaa.assert.outputEquals(
    yaa.insert(three[0], three[1], three[2]),
    function(complete, cancel) {
      yaa.nop().call(null, complete, cancel,
          three[0], three[1], three[2])
    }, 'Three arguments nop.'));


cases.push(yaa.assert.outputEquals(
    yaa.insert(two[0], two[1]),
    function(complete, cancel) {
      yaa.nop().call(null, complete, cancel, two[0], two[1])
    }, 'Two arguments nop.'));


cases.push(yaa.assert.outputEquals(
    yaa.insert(one[0]),
    function(complete, cancel) {
      yaa.nop().call(null, complete, cancel, one[0])
    }, 'One argument nop.'));


cases.push(yaa.assert.outputEquals(
    yaa.insert(), function(complete, cancel) {
      yaa.nop().call(null, complete, cancel)
    }, 'Zero arguments nop.'));
