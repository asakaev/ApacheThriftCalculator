var yaa = require('../../bin/index.js');
var test = require('../test.js');
var cases = [];
var context = {};

module.exports = test(cases, __filename.substr(__dirname.length + 1), context);

/**
 * @param {yaa.Input} value
 * @return {!yaa.Step}
 */
function append(value) {

  /**
   * @this {yaa.Context}
   * @param {!yaa.CompleteHandler} complete
   * @param {!yaa.ErrorHandler} cancel
   * @param {!Array} array
   */
  function append(complete, cancel, array) {
    array.push(value);
    complete(array);
  }

  return append;
}



var one = {};
var two = {};
var three = {};
var four = {};
var five = {};

cases.push(yaa.sequence([
  yaa.assert.contextEquals(context, 'Context is correct.'),
  yaa.assert.contextEquals(context, 'Context is correct.'),
  yaa.assert.contextEquals(context, 'Context is correct.'),
  yaa.assert.contextEquals(context, 'Context is correct.'),
  yaa.assert.contextEquals(context, 'Context is correct.')
]));


cases.push(yaa.assert.outputDeepEquals(
    yaa.sequence([]), yaa.nothing(), 'Sequence 1 correct.'));

cases.push(yaa.assert.outputDeepEquals(yaa.sequence([
  yaa.insert([])
]), yaa.insert([]), 'Sequence 2 correct.'));

cases.push(yaa.assert.outputDeepEquals(yaa.sequence([
  yaa.insert([]),
  append(one)
]), yaa.insert([one]), 'Sequence 3 correct.'));

cases.push(yaa.assert.outputDeepEquals(yaa.use(yaa.sequence([
  append(one)
]), yaa.insert([])), yaa.insert([one]), 'Sequence 4 correct.'));

cases.push(yaa.assert.outputDeepEquals(yaa.use(
    yaa.sequence([]), yaa.insert([])), yaa.insert([]), 'Sequence 5 correct.'));

cases.push(yaa.assert.outputDeepEquals(yaa.sequence([
  yaa.insert([one])
]), yaa.insert([one]), 'Sequence 6 correct.'));

cases.push(yaa.assert.outputDeepEquals(yaa.sequence([
  yaa.insert([one]),
  append(two)
]), yaa.insert([one, two]), 'Sequence 7 correct.'));

cases.push(yaa.assert.outputDeepEquals(yaa.sequence([
  yaa.insert([one]),
  append(two),
  append(three)
]), yaa.insert([one, two, three]), 'Sequence 8 correct.'));

cases.push(yaa.assert.outputDeepEquals(yaa.sequence([
  yaa.insert([one]),
  append(two),
  append(three),
  append(four)
]), yaa.insert([one, two, three, four]), 'Sequence 9 correct.'));

cases.push(yaa.assert.outputDeepEquals(yaa.sequence([
  yaa.insert([one]),
  append(two),
  append(three),
  append(four),
  append(five)
]), yaa.insert([one, two, three, four, five]), 'Sequence 10 correct.'));

cases.push(yaa.assert.outputDeepEquals(yaa.sequence([
  yaa.insert([one]),
  yaa.sequence([
    append(two),
    append(three)
  ]),

  append(four),
  append(five)
]), yaa.insert([one, two, three, four, five]), 'Sequence 11 correct.'));



