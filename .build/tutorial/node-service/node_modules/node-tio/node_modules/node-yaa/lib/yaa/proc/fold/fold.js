

/**
 * @param {!yaa.Step} handler
 * @param {!yaa.Step} source
 * @param {!yaa.Step=} opt_collector
 * @return {!yaa.Step}
 */
yaa.proc.fold.parallel = function(handler, source, opt_collector) {
  var collector = opt_collector || yaa.collector.flat();

  return yaa.proc.parallel(
      yaa.use(collector, handler), source, yaa.use(collector, yaa.nothing()));
};


/**
 * @param {!yaa.Step} handler
 * @param {!yaa.Step} source
 * @param {!yaa.Step=} opt_collector
 * @return {!yaa.Step}
 */
yaa.proc.fold.sequence = function(handler, source, opt_collector) {
  var collector = opt_collector || yaa.collector.flat();

  return yaa.proc.sequence(
      yaa.use(collector, handler), source, yaa.use(collector, yaa.nothing()));
};
