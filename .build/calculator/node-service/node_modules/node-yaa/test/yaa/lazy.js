var yaa = require('../../bin/index.js');
var test = require('../test.js');
var cases = [];
var context = {};

module.exports = test(cases, __filename.substr(__dirname.length + 1), context);


/**
 * @param {!yaa.Input} value
 * @param {number} delay
 * @return {!yaa.Step}
 */
function insertOnce(value, delay) {
  var output = true;

  function insertOnce(complete, cancel) {
    if (output) {
      output = false;
      setTimeout(complete, delay, value);
    } else {
      complete();
    }
  }

  return insertOnce;
}


/**
 * @param {number} size
 */
function countdown(size) {
  size += 1;

  /**
   * @param {!yaa.CompleteHandler} complete
   * @param {!yaa.ErrorHandler} cancel
   */
  function countdown(complete, cancel) {
    var result = size -= 1;
    if (result >= 1) {
      setTimeout(complete, 10 * Math.random(), result);
    } else {
      complete();
    }
  }

  return countdown;
}


var one = {};
var two = {};

cases.push(yaa.assert.outputEquals(
    yaa.api.client.session(insertOnce(yaa.insert(one, two), 100)),
    yaa.insert(one, two),

    'Init.'));


var insertSession = yaa.api.client.session(insertOnce(yaa.insert(one), 100));

cases.push(yaa.assert.outputEquals(
    yaa.pair(insertSession, insertSession),
    yaa.insert(one, one),

    'Init once.'));



var countdownSession = yaa.api.client.session(insertOnce(countdown(10), 100));

cases.push(yaa.assert.outputEquals(
    countdownSession, yaa.insert(10), 'Session correct.'));
cases.push(yaa.assert.outputEquals(
    countdownSession, yaa.insert(9), 'Session correct.'));
cases.push(yaa.assert.outputEquals(
    countdownSession, yaa.insert(8), 'Session correct.'));
cases.push(yaa.assert.outputEquals(
    countdownSession, yaa.insert(7), 'Session correct.'));
cases.push(yaa.assert.outputEquals(
    countdownSession, yaa.insert(6), 'Session correct.'));
cases.push(yaa.assert.outputEquals(
    countdownSession, yaa.insert(5), 'Session correct.'));
cases.push(yaa.assert.outputEquals(
    countdownSession, yaa.insert(4), 'Session correct.'));
cases.push(yaa.assert.outputEquals(
    countdownSession, yaa.insert(3), 'Session correct.'));
cases.push(yaa.assert.outputEquals(
    countdownSession, yaa.insert(2), 'Session correct.'));
cases.push(yaa.assert.outputEquals(
    countdownSession, yaa.insert(1), 'Session correct.'));
cases.push(yaa.assert.outputEquals(

    countdownSession, yaa.nothing(), 'Session correct.'));




