


/**
 * @constructor
 * @implements {yaa.IStep}
 * @param {!thrift.protocol.IProtocol} protocol
 * @param {tio.client.HttpOptions} options
 */
tio.client.__Http = function(protocol, options) {

  /**
   * @type {!thrift.protocol.IProtocol}
   */
  this.__protocol = protocol;

  /**
   * @type {tio.client.HttpOptions}
   */
  this.__options = options;
};


/**
 * @inheritDoc
 */
tio.client.__Http.prototype.call =
    function(context, complete, cancel, message) {
  console.info('Send request "' + message + '" to "' +
      this.__options.hostname + ':' + this.__options.port + '".');

  var protocol = this.__protocol;
  var request = http.request({
    'method': 'POST',
    'headers': message.getHeaders(),
    'hostname': this.__options.hostname,
    'port': this.__options.port
  });


  /**
   * @param {!http.IncomingMessage} response
   */
  function localComplete(response) {
    request.removeAllListeners();
    tio.thrift.decode(complete, cancel, protocol, response);
  }

  /**
   * @param {!Error} error
   */
  function localCancel(error) {
    request.removeAllListeners();
    cancel('Worker request error: "' + error + '".');
  }

  request.addListener('response', localComplete);
  request.addListener('error', localCancel);
  request.end(thrift.encodeCall(this.__protocol,
      message.getId(), message.getName(), message.getArgs()));
};
