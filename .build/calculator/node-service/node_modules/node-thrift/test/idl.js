var thrift = require('../bin/index.js');

Idl = function() {

  this.__structures = {
    'testStructure': new thrift.definition.Structure({
      'field1': new thrift.definition.Field(
          'field1', 1, thrift.definition.Type.I32),
      'field2': new thrift.definition.Field(
          'field2', 2, thrift.definition.Type.STRING),
      'field3': new thrift.definition.Field(
          'field3', 3, thrift.definition.Type.BOOL)
    }),

    'testStructure2': new thrift.definition.Structure({
      'field1': new thrift.definition.Field(
          'field1', 1, thrift.definition.Type.LIST, 'testStructure'),
      'field2': new thrift.definition.Field(
          'field2', 2, thrift.definition.Type.MAP,
          thrift.definition.Type.STRING, thrift.definition.Type.STRING)
    })
  };

  this.__methods = {
    'uselessMethod': new thrift.definition.Method(
        {
          '1': new thrift.definition.Field('arg1', 1, 'testStructure2')
        },
        new thrift.definition.FullType(thrift.definition.Type.STRING)),
    'testLongString': new thrift.definition.Method({
      '1': new thrift.definition.Field(
          'arg1', 1, thrift.definition.Type.STRING)
    },
    new thrift.definition.FullType(thrift.definition.Type.STRING))
  };
};


Idl.prototype.getMethodDefinition= function(name) {
  return this.__methods[name];
};


Idl.prototype.getStructureDefinition = function(type) {
  return this.__structures[type];
};


Idl.prototype.createStructure = function(name, str) {

  switch (name) {
    case 'testStructure':
      str = new Idl.TestStructure(str[1], str[2], str[3]);
      break;
    case 'testStructure2':
      str = new Idl.TestStructure2(str[1], str[2]);

      break;
  }
  return str;
};


Idl.TestStructure = function(field1, field2, field3) {
  this.field1 = field1;
  this.field2 = field2;
  this.field3 = field3;
};


Idl.TestStructure2 = function(field1, field2) {
  this.field1 = field1;
  this.field2 = field2;
};

module.exports = Idl;
