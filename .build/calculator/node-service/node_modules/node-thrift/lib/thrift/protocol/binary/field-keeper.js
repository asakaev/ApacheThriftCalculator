


/**
 * @implements {thrift.IValueKeeper}
 * @constructor
 * @param {!thrift.protocol.IProtocol} protocol
 */
thrift.protocol.binary.FieldKeeper = function(protocol) {

  /**
   * @type {!thrift.protocol.IProtocol}
   */
  this.__protocol = protocol;

  /**
   * @type {thrift.Value}
   */
  this.__result = null;

  /**
   * @type {number}
   */
  this.__type = -1;

  /**
   * @type {number}
   */
  this.__id = -1;

  /**
   * @type {boolean}
   */
  this.__isComplete = false;

  /**
   * @type {boolean}
   */
  this.__isHeaderComplete = false;
};


/**
 * @inheritDoc
 */
thrift.protocol.binary.FieldKeeper.prototype.processHeader =
    function(cursor, chunk) {
  if (this.__type === -1) {
    var type = this.__protocol.readByte(cursor, chunk);
    if (cursor.isParsed()) {
      this.__type = type;
    }
  }

  if (cursor.isParsed() && this.__type !== thrift.definition.Type.STOP) {
    var id = this.__protocol.readI16(cursor, chunk);
    if (cursor.isParsed()) {
      this.__id = id;
    }
  }

  this.__isHeaderComplete = cursor.isParsed();
};


/**
 * @inheritDoc
 */
thrift.protocol.binary.FieldKeeper.prototype.isHeaderComplete = function() {
  return this.__isHeaderComplete;
};


/**
 * @inheritDoc
 */
thrift.protocol.binary.FieldKeeper.prototype.applyData = function(value) {
  this.__isComplete = true;
  this.__result = new thrift.Field(this.__type, this.__id, value);
};


/**
 * @inheritDoc
 */
thrift.protocol.binary.FieldKeeper.prototype.isComplete = function() {
  return this.__isComplete;
};


/**
 * @inheritDoc
 */
thrift.protocol.binary.FieldKeeper.prototype.get = function() {
  return this.__result;
};


/**
 * @return {number}
 */
thrift.protocol.binary.FieldKeeper.prototype.getType = function() {
  return this.__type;
};


/**
 * @return {number}
 */
thrift.protocol.binary.FieldKeeper.prototype.getId = function() {
  return this.__id;
};
