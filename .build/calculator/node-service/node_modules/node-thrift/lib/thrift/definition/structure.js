


/**
 * @constructor
 *
 * @param {!Object.<string, !thrift.definition.Field>} fields
 */
thrift.definition.Structure = function(fields) {

  /**
   * @type {!Object.<string, !thrift.definition.Field>}
   */
  this.__fieldsByName = fields;

  /**
   * @type {Object.<string, !thrift.definition.Field>}
   */
  this.__fieldsById = {};

  for (var i in fields) {
    this.__fieldsById[fields[i].getId()] = fields[i];
  }
};


/**
 * @param {string} id
 * @return {thrift.definition.FullType}
 */
thrift.definition.Structure.prototype.getTypeById = function(id) {
  var field = this.__fieldsById[id];
  if (field !== undefined) {
    return field.getFullType();
  } else {
    console.warn('Unknown field id: ' + id +
        '[thrift.definition.Structure.prototype.getTypeById]');
  }

  return null;
};


/**
 * @param {string} name
 * @return {thrift.definition.FullType}
 */
thrift.definition.Structure.prototype.getTypeByName = function(name) {
  var field = this.__fieldsByName[name];
  if (field !== undefined) {
    return field.getFullType();
  } else {
    console.warn('Unknown field name: ' + name +
        '[thrift.definition.Structure.prototype.getTypeById]');
  }

  return null;
};


/**
 * @param {string} name
 * @return {number}
 */
thrift.definition.Structure.prototype.getIdByName = function(name) {
  if (this.__fieldsByName[name] !== undefined) {
    return this.__fieldsByName[name].getId();
  } else {
    console.warn('Unknown field name: ' + name +
        '[thrift.definition.Structure.prototype.getIdByName]');
  }

  return -1;
};
